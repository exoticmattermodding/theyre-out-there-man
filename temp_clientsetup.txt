1	package com.exoticmatter.totm.client;
2	
3	import com.exoticmatter.totm.client.model.FlyingSaucerModel;
4	import com.exoticmatter.totm.client.render.FlyingSaucerRenderer;
5	import com.exoticmatter.totm.registry.ModSkullTypes;
6	import com.exoticmatter.totm.registry.ModEntities;
7	// import com.exoticmatter.totm.registry.ModBlocks;
8	// import net.minecraft.client.Minecraft;
9	// import net.minecraft.resources.ResourceLocation;
10	// import net.minecraft.world.inventory.InventoryMenu;
11	// import net.minecraft.world.level.block.state.BlockState;
12	// import net.minecraftforge.client.extensions.common.IClientBlockExtensions;
13	import net.minecraftforge.api.distmarker.Dist;
14	import net.minecraftforge.client.event.EntityRenderersEvent;
15	import net.minecraftforge.client.event.EntityRenderersEvent.RegisterRenderers;
16	import net.minecraftforge.eventbus.api.SubscribeEvent;
17	import net.minecraftforge.fml.common.Mod;
18	import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
19	
20	@Mod.EventBusSubscriber(modid = "totm", value = Dist.CLIENT, bus = Mod.EventBusSubscriber.Bus.MOD)
21	public class ClientSetup {
22	
23	    @SubscribeEvent
24	    public static void registerLayerDefinitions(EntityRenderersEvent.RegisterLayerDefinitions event) {
25	        // This line actually defines the model layer, so bakeLayer() can find it
26	        event.registerLayerDefinition(FlyingSaucerModel.LAYER_LOCATION, FlyingSaucerModel::createBodyLayer);
27	        // Using vanilla skeleton skull layer baked in renderers
28	    }
29	
30	    @SubscribeEvent
31	    public static void registerRenderers(EntityRenderersEvent.RegisterRenderers event) {
32	        event.registerEntityRenderer(ModEntities.FLYING_SAUCER.get(), FlyingSaucerRenderer::new);
33	        event.registerEntityRenderer(ModEntities.GRAY_ALIEN.get(),
34	                ctx -> new net.minecraft.client.renderer.entity.HumanoidMobRenderer<>(
35	                        ctx,
36	                        new net.minecraft.client.model.HumanoidModel<>(ctx.bakeLayer(net.minecraft.client.model.geom.ModelLayers.ZOMBIE)),
37	                        0.5f
38	                ) {
39	                    private final net.minecraft.resources.ResourceLocation TEX = new net.minecraft.resources.ResourceLocation("totm", "textures/entity/gray_alien.png");
40	                    @Override
41	                    public net.minecraft.resources.ResourceLocation getTextureLocation(com.exoticmatter.totm.world.entity.GrayAlienEntity e) {
42	                        return TEX;
43	                    }
44	                }
45	        );
46	
47	    }
48	
49	    @SubscribeEvent
50	    public static void addLayers(EntityRenderersEvent.AddLayers event) {
51	        var cowRenderer = event.getRenderer(net.minecraft.world.entity.EntityType.COW);
52	        if (cowRenderer instanceof net.minecraft.client.renderer.entity.CowRenderer cr) {
53	            cr.addLayer(new com.exoticmatter.totm.client.render.AlienCowLayer(cr));
54	        }
55	    }
56	
57	    @SubscribeEvent
58	    public static void registerSkullModels(EntityRenderersEvent.CreateSkullModels event) {
59	        // CreateSkullModels does not expose a model set; use Minecraft client model set
60	        var model = new net.minecraft.client.model.SkullModel(
61	                net.minecraft.client.Minecraft.getInstance()
62	                        .getEntityModels()
63	                        .bakeLayer(net.minecraft.client.model.geom.ModelLayers.SKELETON_SKULL)
64	        );
65	        event.registerSkullModel(ModSkullTypes.ALIEN, model);
66	        net.minecraft.client.renderer.blockentity.SkullBlockRenderer.SKIN_BY_TYPE.put(
67	                ModSkullTypes.ALIEN,
68	                new net.minecraft.resources.ResourceLocation("totm", "textures/entity/alien_skull.png")
69	        );
70	    }
71	
72	    // Client particle override removed for 1.20.1 compatibility; particles are supplied via
73	    // blockstates referencing a simple model with the desired particle texture.
74	}
